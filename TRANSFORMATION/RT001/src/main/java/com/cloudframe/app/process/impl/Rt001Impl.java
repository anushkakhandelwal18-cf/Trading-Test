  package com.cloudframe.app.process.impl;
  /* Java code generated by CloudFrame on 2024-11-22 at 06:10. */
  
  import com.cloudframe.app.rt001.Rt001Ctx.*;
  import com.cloudframe.app.rt001.Rt001Ctx;
  import com.cloudframe.app.process.Rt001;
  import com.cloudframe.app.process.BaseProcess;
  import org.springframework.web.bind.annotation.GetMapping;
  import org.slf4j.Logger;
  import org.slf4j.LoggerFactory;
  import com.cloudframe.app.exception.CFException;
  import org.springframework.stereotype.Component;
  import org.springframework.web.bind.annotation.RestController;
  import com.cloudframe.app.dto.GlobalExecutorCtx;
  import com.cloudframe.app.exception.Terminate;
  import com.cloudframe.app.rt001.dto.*;
  import com.cloudframe.app.rt001.dto.Work;
  import com.cloudframe.app.common.CONSTANTS;
  import com.cloudframe.app.utility.CFUtil;
  
  @Component("rt001")
  
  public class Rt001Impl extends CommonProcess implements Rt001 {
  
  Logger logger = LoggerFactory.getLogger(Rt001Impl.class);
  
  
  
  
  
  
  
  
  
  
      /**
      * process 
      * Input  : None 

      * Output : None 

      * @throws CFException
      */
      public int process(Rt001Ctx programCtx) throws Exception {
       try {
       setCodePage("1047");
            // Reset program ended flag
           programCtx.setProgramEnded(false);
//  cobolCode::PERFORM PROGRAM-BEGIN
//  PERFORM PROGRAM-BEGIN
          programBegin(programCtx.getProgramBeginInCtx());/*PROGRAM-BEGIN*/
//  cobolCode::PERFORM PROGRAM-DONE
//  PERFORM PROGRAM-DONE
          programDone(programCtx);/*PROGRAM-DONE*/
       } catch(Exception e) {
            handleErrorCode(e);
            throw e;
       }
      
       return programCtx.getRc(); // Exit with return code
      // end of process method
      }
      /**
      * programBegin 
      *   This method is derived from 
  *   COBOL Paragraph - PROGRAM-BEGIN COBOL Cyclomatic complexity - 1
      * Input  :  

      * - firstNumber                    COBOL Name: FIRST-NUMBER
      * - secondNumber                   COBOL Name: SECOND-NUMBER
      *
      * Output :  

      * - theResult                      COBOL Name: THE-RESULT
      *
      * @throws CFException
      */
      @Override
      public ProgramBeginOutCtx programBegin(ProgramBeginInCtx methodIn) throws Exception {
//Added variable to get the program context in place.
Rt001Ctx programCtx = methodIn.getRt001Ctx();
//Added variable to get the output context in place.
ProgramBeginOutCtx methodOut = methodIn.getProgramBeginOutCtx();
//  cobolCode::DISPLAY "THIS PROGRAM WILL ADD 2 NUMBERS."
//  DISPLAY "THIS PROGRAM WILL ADD 2 NUMBERS."
          logger.info("THIS PROGRAM WILL ADD 2 NUMBERS."); 
//  cobolCode::DISPLAY "ENTER THE FIRST NUMBER."
//  DISPLAY "ENTER THE FIRST NUMBER."
          logger.info("ENTER THE FIRST NUMBER."); 
//  cobolCode::DISPLAY "ENTER THE SECOND NUMBER."
//  DISPLAY "ENTER THE SECOND NUMBER."
          logger.info("ENTER THE SECOND NUMBER."); 
//  cobolCode::COMPUTE THE-RESULT = FIRST-NUMBER + SECOND-NUMBER
          methodOut.setTheResult((int)Math.abs(methodIn.getFirstNumber() + methodIn.getSecondNumber()));
//  cobolCode::DISPLAY "THE RESULT IS " THE-RESULT
//  DISPLAY "THE RESULT IS " THE-RESULT
          logger.info("THE RESULT IS {}", String.valueOf(methodOut.getTheResult())); 
      
      return methodOut;
      }
      /**
      * programDone 
      *   This method is derived from 
  *   COBOL Paragraph - PROGRAM-DONE COBOL Cyclomatic complexity - 2
      * Input  : None 

      * Output : None 

      * @throws CFException
      */
      @Override
      public void programDone(Rt001Ctx programCtx) throws Exception {
//  cobolCode::STOP RUN
//  STOP RUN
          throw Terminate.TERMINATE;
      
      }
  
  
  
  
  
  
  
  
  }
