  package com.cloudframe.app.process.impl;
  /* Java code generated by CloudFrame on 2024-11-30 at 14:38. */
  
  import com.cloudframe.app.cfdate.CfdateCtx.*;
  import com.cloudframe.app.cfdate.CfdateCtx;
  import com.cloudframe.app.process.Cfdate;
  import com.cloudframe.app.process.BaseProcess;
  import org.springframework.web.bind.annotation.GetMapping;
  import org.slf4j.Logger;
  import org.slf4j.LoggerFactory;
  import com.cloudframe.app.exception.CFException;
  import org.springframework.stereotype.Component;
  import org.springframework.web.bind.annotation.RestController;
  import com.cloudframe.app.dto.GlobalExecutorCtx;
  import com.cloudframe.app.utility.CFUtil;
  import com.cloudframe.app.exception.Terminate;
  import com.cloudframe.app.cfdate.dto.*;
  import com.cloudframe.app.cfdate.dto.Work;
  import com.cloudframe.app.common.CONSTANTS;
  
  @Component("cfdate")
  
  public class CfdateImpl extends CommonProcess implements Cfdate {
  
  Logger logger = LoggerFactory.getLogger(CfdateImpl.class);
  
  
  
  
  
  
  
  
  
  
      /**
      * process 
      * Input  : None 

      * Output :  

      * - bkupDtIso                      COBOL Name: WS-BKUP-DT-ISO
      * - integerOfDate                  COBOL Name: WS-INTEGER-OF-DATE
      * - julianDate                     COBOL Name: WS-JULIAN-DATE
      *
      * @throws CFException
      */
      public int process(CfdateCtx programCtx) throws Exception {
       try {
       setCodePage("1047");
            // Reset program ended flag
           programCtx.setProgramEnded(false);
//Added variable to get the output context in place.
ProcessInCtx methodIn = programCtx.getProcessInCtx();
//Added variable to get the output context in place.
ProcessOutCtx methodOut = methodIn.getProcessOutCtx();
          methodOut.setBkupDtIso((long)20180923);
//  cobolCode::PERFORM 300 TIMES
          for (int index0 = 0; index0 < 300;index0++) {
//  cobolCode::COMPUTE WS-INTEGER-OF-DATE = FUNCTION INTEGER-OF-DATE ( WS-BKUP-DT-ISO )
              methodOut.setIntegerOfDate((int) CFUtil.integerOfDate((int) methodOut.getBkupDtIso()));
//  cobolCode::SUBTRACT 92 FROM WS-INTEGER-OF-DATE
              methodOut.setIntegerOfDate(methodOut.getIntegerOfDate()-92);
//  cobolCode::COMPUTE WS-BKUP-DT-ISO = FUNCTION DATE-OF-INTEGER ( WS-INTEGER-OF-DATE )
              methodOut.setBkupDtIso((long)Math.abs(CFUtil.dateOfInteger(methodOut.getIntegerOfDate())));
//  cobolCode::DISPLAY "DATE-OF-INTEGER    " WS-BKUP-DT-ISO
              logger.info("DATE-OF-INTEGER    {}", String.valueOf(methodOut.getBkupDtIso())); 
//  cobolCode::COMPUTE WS-JULIAN-DATE = FUNCTION DAY-OF-INTEGER ( WS-INTEGER-OF-DATE )
              methodOut.setJulianDate((long)Math.abs(CFUtil.dayOfInteger(methodOut.getIntegerOfDate())));
//  cobolCode::DISPLAY "DAY-OF-INTEGER     " WS-JULIAN-DATE
              logger.info("DAY-OF-INTEGER     {}", String.valueOf(methodOut.getJulianDate())); 
          }
//  cobolCode::GOBACK
          setNotLogged(false); // no need to log, it is a normal termination
          programCtx.setProgramEnded(true);
          return programCtx.getRc();
       } catch(Exception e) {
            handleErrorCode(e);
            throw e;
       }
      
      // end of process method
      }
  
  
  
  
  
  
  
  
  }
